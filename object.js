class Object {
    //https://free3d.com/3d-models/architecture

    points = [
        // Front
        0.0, 0.0, 0.0,
        0.0, 1.0, 0.0,
        1.0, 0.0, 0.0,

        0.0, 1.0, 0.0,
        1.0, 0.0, 0.0,
        1.0, 1.0, 0.0,

        // Left
        0.0, 0.0, 0.0,
        0.0, 1.0, 0.0,
        0.0, 0.0, -1.0,

        0.0, 1.0, -1.0,
        0.0, 0.0, -1.0,
        0.0, 1.0, 0.0,

        // Back
        0.0, 0.0, -1.0,
        0.0, 1.0, -1.0,
        1.0, 0.0, -1.0,

        0.0, 1.0, -1.0,
        1.0, 0.0, -1.0,
        1.0, 1.0, -1.0,

        // Right
        1.0, 0.0, 0.0,
        1.0, 1.0, 0.0,
        1.0, 0.0, -1.0,

        1.0, 1.0, -1.0,
        1.0, 0.0, -1.0,
        1.0, 1.0, 0.0,

        // Top
        0.0, 1.0, 0.0,
        0.0, 1.0, -1.0,
        1.0, 1.0, 0.0,

        1.0, 1.0, 0.0,
        0.0, 1.0, -1.0,
        1.0, 1.0, -1.0,

        // Bottom
        0.0, 0.0, 0.0,
        0.0, 0.0, -1.0,
        1.0, 0.0, 0.0,

        1.0, 0.0, 0.0,
        0.0, 0.0, -1.0,
        1.0, 0.0, -1.0,
    ];

    constructor() { }

    getPoints () {
        return this.points;
    }

    drawF(gl) {
        gl.bufferData(
            gl.ARRAY_BUFFER,
            new Float32Array([
                // left column front
                0,   0,  0,
                0, 150,  0,
                30,   0,  0,
                0, 150,  0,
                30, 150,  0,
                30,   0,  0,
      
                // top rung front
                30,   0,  0,
                30,  30,  0,
                100,   0,  0,
                30,  30,  0,
                100,  30,  0,
                100,   0,  0,
      
                // middle rung front
                30,  60,  0,
                30,  90,  0,
                67,  60,  0,
                30,  90,  0,
                67,  90,  0,
                67,  60,  0,
      
                // left column back
                  0,   0,  30,
                 30,   0,  30,
                  0, 150,  30,
                  0, 150,  30,
                 30,   0,  30,
                 30, 150,  30,
      
                // top rung back
                 30,   0,  30,
                100,   0,  30,
                 30,  30,  30,
                 30,  30,  30,
                100,   0,  30,
                100,  30,  30,
      
                // middle rung back
                 30,  60,  30,
                 67,  60,  30,
                 30,  90,  30,
                 30,  90,  30,
                 67,  60,  30,
                 67,  90,  30,
      
                // top
                  0,   0,   0,
                100,   0,   0,
                100,   0,  30,
                  0,   0,   0,
                100,   0,  30,
                  0,   0,  30,
      
                // top rung right
                100,   0,   0,
                100,  30,   0,
                100,  30,  30,
                100,   0,   0,
                100,  30,  30,
                100,   0,  30,
      
                // under top rung
                30,   30,   0,
                30,   30,  30,
                100,  30,  30,
                30,   30,   0,
                100,  30,  30,
                100,  30,   0,
      
                // between top rung and middle
                30,   30,   0,
                30,   60,  30,
                30,   30,  30,
                30,   30,   0,
                30,   60,   0,
                30,   60,  30,
      
                // top of middle rung
                30,   60,   0,
                67,   60,  30,
                30,   60,  30,
                30,   60,   0,
                67,   60,   0,
                67,   60,  30,
      
                // right of middle rung
                67,   60,   0,
                67,   90,  30,
                67,   60,  30,
                67,   60,   0,
                67,   90,   0,
                67,   90,  30,
      
                // bottom of middle rung.
                30,   90,   0,
                30,   90,  30,
                67,   90,  30,
                30,   90,   0,
                67,   90,  30,
                67,   90,   0,
      
                // right of bottom
                30,   90,   0,
                30,  150,  30,
                30,   90,  30,
                30,   90,   0,
                30,  150,   0,
                30,  150,  30,
      
                // bottom
                0,   150,   0,
                0,   150,  30,
                30,  150,  30,
                0,   150,   0,
                30,  150,  30,
                30,  150,   0,
      
                // left side
                0,   0,   0,
                0,   0,  30,
                0, 150,  30,
                0,   0,   0,
                0, 150,  30,
                0, 150,   0,
            ]),
        gl.STATIC_DRAW);
    }

    drawCube (gl) {        
        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.points), gl.STATIC_DRAW);
    }
}